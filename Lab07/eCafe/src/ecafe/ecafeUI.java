/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ecafe;

/**
 *
 * @author ali
 */


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import static javax.swing.JOptionPane.showMessageDialog;
public class ecafeUI extends javax.swing.JFrame {

    /**
     * Creates new form ecafeUI
     */
    public ecafeUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        eCafePUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("eCafePU").createEntityManager();
        userQuery = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT u FROM User u");
        userList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : userQuery.getResultList();
        userQuery1 = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT u FROM User u");
        userList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : userQuery1.getResultList();
        userQuery2 = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT u FROM User u");
        userList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : userQuery2.getResultList();
        menuQuery = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT m FROM Menu m");
        menuList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : menuQuery.getResultList();
        orderHistoryQuery = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT o FROM OrderHistory o");
        orderHistoryList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : orderHistoryQuery.getResultList();
        ordersQuery = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT o FROM Orders o");
        ordersList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ordersQuery.getResultList();
        ordersQuery2 = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT o FROM Orders o");
        ordersList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ordersQuery2.getResultList();
        ordersQuery1 = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT o FROM Orders o");
        ordersList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ordersQuery1.getResultList();
        ordersQuery3 = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT o FROM Orders o");
        ordersList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ordersQuery3.getResultList();
        ordersQuery4 = java.beans.Beans.isDesignTime() ? null : eCafePUEntityManager.createQuery("SELECT o FROM Orders o");
        ordersList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : ordersQuery4.getResultList();
        Views = new javax.swing.JTabbedPane();
        Users_View = new javax.swing.JScrollPane();
        Users_Table = new javax.swing.JTable();
        menu_view = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        corder_view = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        orders_view = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        Tables = new javax.swing.JComboBox<>();
        zeid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, userList2, Users_Table);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userId}"));
        columnBinding.setColumnName("User Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${username}"));
        columnBinding.setColumnName("Username");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${domain}"));
        columnBinding.setColumnName("Domain");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${password}"));
        columnBinding.setColumnName("Password");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        Users_Table.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                Users_TablePropertyChange(evt);
            }
        });
        Users_View.setViewportView(Users_Table);

        Views.addTab("Users", Users_View);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, menuList, jTable3);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dishId}"));
        columnBinding.setColumnName("Dish Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${price}"));
        columnBinding.setColumnName("Price");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantity}"));
        columnBinding.setColumnName("Quantity");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${type}"));
        columnBinding.setColumnName("Type");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        menu_view.setViewportView(jTable3);

        Views.addTab("Menu", menu_view);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, orderHistoryList, jTable1);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalAmount}"));
        columnBinding.setColumnName("Total Amount");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${date}"));
        columnBinding.setColumnName("Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${time}"));
        columnBinding.setColumnName("Time");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        corder_view.setViewportView(jTable1);

        Views.addTab("Complete Order", corder_view);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ordersList, jTable2);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${orderId}"));
        columnBinding.setColumnName("Order Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${completionStatus}"));
        columnBinding.setColumnName("Completion Status");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${type}"));
        columnBinding.setColumnName("Type");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${time}"));
        columnBinding.setColumnName("Time");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        orders_view.setViewportView(jTable2);

        Views.addTab("Orders", orders_view);

        jInternalFrame1.setVisible(true);

        Tables.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Users", "Menu", "Orders"}));
        Tables.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                TablesComponentShown(evt);
            }
        });
        Tables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TablesActionPerformed(evt);
            }
        });

        zeid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeidActionPerformed(evt);
            }
        });

        jLabel1.setText("   Enter corresponding ID here :");

        jButton1.setBackground(new java.awt.Color(2, 100, 150));
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(zeid, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Tables, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tables, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zeid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        Views.addTab("Delete", jInternalFrame1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(Views, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(Views, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Users_TablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_Users_TablePropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_Users_TablePropertyChange

    
    private void TablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TablesActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_TablesActionPerformed

    private void zeidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zeidActionPerformed

    private void TablesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_TablesComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_TablesComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                Connection conn;
        Statement st;
        ResultSet rs;
        int check = Tables.getSelectedIndex();
        String id = zeid.getText();
        System.out.println(id);   
        String zetable = ""; 
        if (check == 0){
            zetable = "user";
                    try{
          Class.forName("com.mysql.jdbc.Driver");
          conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/ecafe","root","");
          st=conn.createStatement();
           /*Run query to add login name and password in the stUser table*/

              String query ="DELETE FROM "+ zetable+" WHERE user_id = "+id;              
              st.executeUpdate(query); 
           
          System.out.println("Query executed successfully ");       
        }
        catch(Exception ex){
           //Handle errors for JDBC
           System.out.println("Error: "+ex);
        }
        }
        else if(check == 1){
            zetable = "menu";
                    try{
          Class.forName("com.mysql.jdbc.Driver");
          conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/ecafe","root","");
          st=conn.createStatement();
           /*Run query to add login name and password in the stUser table*/

              String query ="DELETE FROM "+ zetable+" WHERE dish_id = "+id;
               System.out.println(query);   
              
              st.executeUpdate(query); 
           
          System.out.println("Query executed successfully ");       
        }
        catch(Exception ex){
           //Handle errors for JDBC
           System.out.println("Error: "+ex);
        }
        }
        else if(check == 2){
            zetable = "order_history";
                    try{
          Class.forName("com.mysql.jdbc.Driver");
          conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/ecafe","root","");
          st=conn.createStatement();
           /*Run query to add login name and password in the stUser table*/

              String query ="DELETE FROM "+ zetable+" WHERE id = "+id;
               System.out.println(query);   
              
              st.executeUpdate(query); 
           
          System.out.println("Query executed successfully ");       
        }
        catch(Exception ex){
           //Handle errors for JDBC
           System.out.println("Error: "+ex);
        }
        }
        


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ecafeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ecafeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ecafeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ecafeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ecafeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Tables;
    private javax.swing.JTable Users_Table;
    private javax.swing.JScrollPane Users_View;
    private javax.swing.JTabbedPane Views;
    private javax.swing.JScrollPane corder_view;
    private javax.persistence.EntityManager eCafePUEntityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private java.util.List<ecafe.Menu> menuList;
    private javax.persistence.Query menuQuery;
    private javax.swing.JScrollPane menu_view;
    private java.util.List<ecafe.OrderHistory> orderHistoryList;
    private javax.persistence.Query orderHistoryQuery;
    private java.util.List<ecafe.Orders> ordersList;
    private java.util.List<ecafe.Orders> ordersList1;
    private java.util.List<ecafe.Orders> ordersList2;
    private java.util.List<ecafe.Orders> ordersList3;
    private java.util.List<ecafe.Orders> ordersList4;
    private javax.persistence.Query ordersQuery;
    private javax.persistence.Query ordersQuery1;
    private javax.persistence.Query ordersQuery2;
    private javax.persistence.Query ordersQuery3;
    private javax.persistence.Query ordersQuery4;
    private javax.swing.JScrollPane orders_view;
    private java.util.List<ecafe.User> userList;
    private java.util.List<ecafe.User> userList1;
    private java.util.List<ecafe.User> userList2;
    private javax.persistence.Query userQuery;
    private javax.persistence.Query userQuery1;
    private javax.persistence.Query userQuery2;
    private javax.swing.JTextField zeid;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
